{% comment %}
  {% assign avg_rating = block.settings.product.metafields.demo.avg_rating.value | round %}
  <span style="color:{{ block.settings.colour }}">
    {% render 'stars', rating: avg_rating %}
  </span>
  {% if avg_rating >= 4 %}
    <br>
    <img src="{{ "thumbs-up.png" | asset_img_url: '15x' }}" height="15" width="15" loading="lazy">

    {{ 'ratings.home.recommendationText' | t }}
  {% endif %}
{% endcomment %}

{% schema %}
{
  "name": "Star Rating",
  "target": "section",
  "settings": [
    { "type": "product", "id": "product", "label": "product", "autofill": true },
    { "type": "color", "id": "colour", "label": "Star Colour", "default": "#ff0000" }
  ]
}
{% endschema %}

{% comment %}
  <link rel="stylesheet" href="{{ 'newstyle.css' | asset_url }}">
  <link rel="stylesheet" href="{{ 'stylenew.css' | asset_url }}">
{% endcomment %}
<link rel="stylesheet" href="{{ 'solitaire_ring.css' | asset_url }}">

<div class="product-customizer">
  <span class="h1">{{ product.title }}</span>
  <span class="h1" id="carat">1.00</span> <br>
  <span class="h1">CT. TW.</span>
  <div class="flex">
    <p>SKU: {{ product.variants.first.sku }}</p>
    <p class="retail-price">
      <span>RETAIL PRICE:</span>
      <span>{{ product.price | money }}</span>
    </p>
  </div>
  <s class="compare-price">{{ product.compare_at_price | money }}</s>
  <div class="add-to-cart">
    <span class="sale-price-wrapper">
      <span class="rebate-applied">70% REBATE APPLIED</span>
      <div>
        <span class="sale-price-title">Buy Now:</span>
        <span id="mydemo" class="builder-price">{{ product.price | money }}</span>
      </div>
    </span>
    <button class="add-to-cart-button" type="submit" name="add">ADD TO CART</button>
  </div>
  <div class="product-customizer-options">
    <h2 class="heading">USE THIS FILTER TO CUSTOMIZE</h2>

    <input type="hidden" name="id" value="{{ product.variants.first.id }}">
    <div class="product-customizer-option">
      <label class="" for="center-stone">Center Stone</label>
      <span class="star">*</span>
      <br>
      <span class="product-customizer-option-label">
        <label for="options_76997_2">Diamond </label>
        <label for="options_76997_2">Lab Diamond </label>
      </span>
    </div>
    <div class="product-customizer-option">
      <label for="center-stone-shape">Center Stone Shape</label>
      <span class="star">*</span>
      <br>
      <img
        class="img"
        src="https://cdn.shopify.com/s/files/1/0737/1295/9775/files/r3.png?v=1704198420"
        onclick="makeActive(this)"
      >

      <img
        class="img"
        src="https://cdn.shopify.com/s/files/1/0737/1295/9775/files/r7.png?v=1704198420"
        onclick="makeActive(this)"
      >
      <img
        class="img"
        src="https://cdn.shopify.com/s/files/1/0737/1295/9775/files/r4.png?v=1704198420"
        onclick="makeActive(this)"
      >
    </div>
    <label for="center-stone-color">Center Stone Weight</label>
    <span class="star">*</span>
    <div class="slidercontainer">
      <input type="range" min="0.25" max="3.00" step="0.05" class="slider" id="myRange">
      <span class="demo" id="demo"></span>
      <div class="caratvalue">
        <span class="values">0.25</span>
        <span class="values">3.00</span>
      </div>
      <script>
        var slider = document.getElementById('myRange');
        var output = document.getElementById('demo');
        var myoutput = document.getElementById('mydemo');
        var myvalue = {{ product.price }};
        output.innerHTML = slider.value;
        var carat= document.getElementById('carat');
        slider.oninput = function () {
          output.innerHTML = this.value;
          carat.innerHTML = slider.value;

          myoutput.innerHTML = (myvalue * parseFloat(this.value)/100).toFixed(2);
        };
      </script>
    </div>
  </div>
  <div class="product-customizer-option">
    <label for="center-stone-color">Center Stone Color</label>
    <span class="star">*</span>
    <div class="slidercontainer">
      <input type="range" min="1" max="10" step="1" class="slider" id="mySecond">
      <span id="second"></span>
      <div class="caratvalue">
        <span class="values">0.25</span>
        <span class="values">3.00</span>
      </div>
      <script>
        var slidertwo = document.getElementById('mySecond');
        var output = document.getElementById('second');
        var myoutput = document.getElementById('mydemo');
        var myvalue = {{ product.price }};
        output.innerHTML = slider.value;
        var carat= document.getElementById('carat');
        slidertwo.oninput = function () {
          output.innerHTML = this.value;
          {% comment %} carat.innerHTML = slider.value; {% endcomment %}

          myoutput.innerHTML = (myvalue / parseFloat(this.value)/100).toFixed(2);
        };
      </script>
    </div>
  </div>
  <div class="product-customizer-option">
    <label for="center-stone-clarity">Center Stone Clarity</label>
    <span class="star">*</span>
    <div class="slidercontainer">
      <input type="range" min="1" max="10" step="1" class="slider" id="myThird">
      <span id="third"></span>
      <div class="caratvalue">
        <span class="values">0.25</span>
        <span class="values">3.00</span>
      </div>
      <script>
        var sliderthree = document.getElementById('myThird');
        var output = document.getElementById('third');
        var myoutput = document.getElementById('mydemo');
        var myvalue = {{ product.price }};
        output.innerHTML = slider.value;
        var carat= document.getElementById('carat');
        sliderthree.oninput = function () {
          output.innerHTML = this.value;
          {% comment %} carat.innerHTML = slider.value; {% endcomment %}

          myoutput.innerHTML = (myvalue / parseFloat(this.value)/100).toFixed(2);
        };
      </script>
    </div>
  </div>
  <div class="product-customizer-option">
    <label for="metal-for-mounting">Metal for Mounting</label>
    <span class="star">*</span><br>
    <select class="metalmounting" id="metal-for-mounting" name="properties[Metal for Mounting]">
      <option value="platinum">platinum</option>
      <option value="10K White Gold">10K White Gold</option>
      <option value="14K White Gold">14k White Gold</option>
      <option value="18K White Gold">18K White Gold</option>
      <option value="10K Yellow Gold">10K White Gold</option>
      <option value="14K Yellow Gold">14k White Gold</option>
      <option value="18K Yellow Gold">18K White Gold</option>
    </select>
  </div>
</div>

<script>
  const weight = document.getElementById('weight');
  const weight_value = document.getElementById('weight_value');

  weight.oninput = function () {
    weight_value.textContent = this.value + ' ct';
  };
  function makeActive(clickedImage) {
    // Get all images
    const images = document.getElementsByTagName('img');

    // Loop through all images and remove the 'active' class
    for (let i = 0; i < images.length; i++) {
      images[i].classList.remove('active');
    }

    // Add the 'active' class to the clicked image
    clickedImage.classList.add('active');
  }
</script>
